{"version":3,"sources":["style.js","App.js","index.js"],"names":["styles","height","margin","userSelect","boxSizing","display","justifyContent","alignItems","list","width","position","itemSize","itemLength","item","background","fontSize","paddingLeft","boxShadow","fontFamily","zIndex","transformOrigin","color","textTransform","letterSpacing","makeStyles","fn","order","curIndex","downIndex","down","my","index","y","immediate","n","scale","indexOf","App","items","classes","useStyles","length","useRef","map","_","i","useSprings","current","springs","set","bind","useDrag","args","movement","distance","Math","round","newIndex","clamp","newOrder","swap","className","word","div","key","style","ReactDOM","render","StrictMode","split","document","getElementById"],"mappings":"sRAEMA,EAAS,CACb,8BACG,CAAC,OAAQ,OAAQ,SAAW,CAC3BC,OAAQ,OACRC,OAAQ,EACRC,WAAY,SAJhB,qBAMQ,CACJC,UAAW,eAPf,cASE,QAAS,CACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAZhB,cAcG,CAAC,IAAK,YAAa,YAAc,CAChCH,UAAW,YAff,GAkBAI,KAAM,CACJC,MAAO,QACPC,SAAU,WACVT,OAAQ,gBAAGU,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAb,gBAAiCD,EAAWC,EAA5C,QAEVC,KAAM,CACJC,WAAY,oDACZC,SAAU,OACVC,YAAa,OACbf,OAAQ,gBAAGU,EAAH,EAAGA,SAAUT,EAAb,EAAaA,OAAb,gBAA6BS,EAAWT,EAAxC,OACRe,UAAW,kCACXC,WAAY,aACZR,SAAU,WACVS,OAAQ,EACRV,MAAO,OACPW,gBAAiB,YACjBC,MAAO,QACPC,cAAe,YACfC,cAAe,MACflB,QAAS,OACTE,WAAY,WAIDiB,cAAWxB,GCpCpByB,EAAK,SAACC,EAAOC,EAAUC,EAAWC,EAAMC,GAAnC,OAA0C,SAAAC,GAAK,OACxDF,GAAQD,IAAcG,EAClB,CACEC,EALU,IAKPL,EAAuBG,EAC1BG,UAAW,SAAAC,GAAC,MAAU,MAANA,GAAmB,WAANA,GAC7Bf,OAAQ,EACRF,UAAW,gCACXkB,MAAO,KAET,CACEH,EAZU,IAYPN,EAAMU,QAAQL,GACjBE,WAAW,EACXd,OAAQ,EACRF,UAAW,8BACXkB,MAAO,KA2CAE,EAxCH,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACPC,EAAUC,EAAU,CACxB7B,SArBc,IAsBdC,WAAY0B,EAAMG,OAClBvC,OAAQ,KAGJwB,EAAQgB,iBAAOJ,EAAMK,KAAI,SAACC,EAAGC,GAAJ,OAAUA,MAPhB,EASFC,qBAAWR,EAAMG,OAAQhB,EAAGC,EAAMqB,UAThC,mBASlBC,EATkB,KASTC,EATS,KAWnBC,EAAOC,aAAQ,YAAoD,IAA1CvB,EAAyC,cAAhDwB,KAAgD,MAA7BvB,EAA6B,EAA7BA,KAAmBC,EAAU,cAAvBuB,SAAuB,MAChE1B,EAAWD,EAAMqB,QAAQX,QAAQR,GACjC0B,EAAWC,KAAKC,OAhCR,IAgCe7B,EAAuBG,GAhCtC,KAiCR2B,EAAWC,gBAAMJ,EAAU,EAAG5B,EAAMqB,QAAQN,OAAS,GACrDkB,EAAWC,IAAKlC,EAAMqB,QAASpB,EAAU8B,GAE/CR,EAAIxB,EAAGkC,EAAUhC,EAAUC,EAAWC,EAAMC,IAEvCD,IACHH,EAAMqB,QAAUY,MAIpB,OACE,yBAAKE,UAAWtB,EAAQ/B,MACrB8B,EAAMK,KAAI,SAACmB,EAAMjB,GAAP,OACT,kBAAC,WAASkB,IAAV,iBACMb,EAAKL,GADX,CAEEmB,IAAKnB,EACLgB,UAAWtB,EAAQ1B,KACnBoD,MAAOjB,EAAQH,KAEdiB,QCvDXI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAK9B,MAAO,wBAAwB+B,MAAM,QAE5CC,SAASC,eAAe,W","file":"static/js/main.00b2721f.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles';\n\nconst styles = {\n  '@global': {\n    [['html', 'body', '#root']]: {\n      height: '100%',\n      margin: 0,\n      userSelect: 'none',\n    },\n    html: {\n      boxSizing: 'border-box',\n    },\n    '#root': {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    [['*', '*::before', '*::after']]: {\n      boxSizing: 'inherit',\n    },\n  },\n  list: {\n    width: '688px',\n    position: 'relative',\n    height: ({ itemSize, itemLength }) => `${itemSize * itemLength}px`,\n  },\n  item: {\n    background: 'linear-gradient(135deg, #008fff 0%, #bdc6bd 100%)',\n    fontSize: '32px',\n    paddingLeft: '32px',\n    height: ({ itemSize, margin }) => `${itemSize - margin}px`,\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.32)',\n    fontFamily: 'sans-serif',\n    position: 'absolute',\n    zIndex: 0,\n    width: '100%',\n    transformOrigin: '50% 50% 0',\n    color: 'white',\n    textTransform: 'uppercase',\n    letterSpacing: '2px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\nexport default makeStyles(styles);\n","import React, { useRef } from 'react';\nimport { useDrag } from 'react-use-gesture';\nimport { animated, useSprings } from 'react-spring';\nimport { clamp } from 'lodash';\nimport swap from 'lodash-move';\nimport useStyles from './style';\n\nconst ITEM_SIZE = 116;\n\nconst fn = (order, curIndex, downIndex, down, my) => index =>\n  down && downIndex === index\n    ? {\n        y: curIndex * ITEM_SIZE + my,\n        immediate: n => n === 'y' || n === 'zIndex',\n        zIndex: 1,\n        boxShadow: '0 15px 30px 0 rgba(0,0,0,.32)',\n        scale: 1.1,\n      }\n    : {\n        y: order.indexOf(index) * ITEM_SIZE,\n        immediate: false,\n        zIndex: 0,\n        boxShadow: '0 4px 8px 0 rgba(0,0,0,.32)',\n        scale: 1,\n      };\n\nconst App = ({ items }) => {\n  const classes = useStyles({\n    itemSize: ITEM_SIZE,\n    itemLength: items.length,\n    margin: 16,\n  });\n\n  const order = useRef(items.map((_, i) => i));\n\n  const [springs, set] = useSprings(items.length, fn(order.current));\n\n  const bind = useDrag(({ args: [downIndex], down, movement: [, my] }) => {\n    const curIndex = order.current.indexOf(downIndex);\n    const distance = Math.round((curIndex * ITEM_SIZE + my) / ITEM_SIZE);\n    const newIndex = clamp(distance, 0, order.current.length - 1);\n    const newOrder = swap(order.current, curIndex, newIndex);\n\n    set(fn(newOrder, curIndex, downIndex, down, my));\n\n    if (!down) {\n      order.current = newOrder;\n    }\n  });\n\n  return (\n    <div className={classes.list}>\n      {items.map((word, i) => (\n        <animated.div\n          {...bind(i)}\n          key={i}\n          className={classes.item}\n          style={springs[i]}\n        >\n          {word}\n        </animated.div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App items={'Lorem ipsum dolor sit'.split(' ')} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}